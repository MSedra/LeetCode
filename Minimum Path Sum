class Solution
{
public:
  int minPathSum(vector<vector<int>> &grid)
  {
    if (grid.size() == 0)
      return 0;
    int n = grid.size();
    int m = grid[0].size();
    vector<vector<long long>> dp(n + 5, vector<long long>(m + 5));
    dp[0][0] = grid[0][0];
    for (int i = 0; i < n; ++i)
      for (int j = 0; j < m; ++j)
      {
        if (!i && !j)
          continue;
        long long mn = LONG_LONG_MAX;
        if (i)
          mn = min(mn, dp[i - 1][j]);
        if (j)
          mn = min(mn, dp[i][j - 1]);
        dp[i][j] = grid[i][j] + mn;
      }
    return dp[n - 1][m - 1];
  }
};
