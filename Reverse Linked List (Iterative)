/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(!head || !head->next)
            return head;
        ListNode* curr=head->next;
        ListNode* pre=head;
        map<ListNode*,ListNode*> prev;
        prev[head]=NULL;
        while(curr){
            prev[curr]=pre;
            pre=curr;
            curr=curr->next;
        }
        ListNode* ret = pre;
        while(pre){
            pre->next=prev[pre];
            pre=prev[pre];
        }
        return ret;
    }
};
