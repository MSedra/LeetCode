/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int kthSmallest(TreeNode *root, int &k, int &current){
        if(!root)
            return -1;
        int result = kthSmallest(root->left, k, current);
        if(result!=-1)
            return result;
        if(current == k)
            return root->val;
        ++current;
        return kthSmallest(root->right, k, current);            
    }
public:
    int kthSmallest(TreeNode* root, int k) {
        int current = 1;
        return kthSmallest(root, k, current);   
    }
};
