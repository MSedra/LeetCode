class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int heights_count = heights.size(), max_rectangle = 0;
        vector<int> next_min_ind(heights_count), prev_min_ind(heights_count);
        stack<pair<int,int>> height_ind;
        for(int i=0 ; i<heights_count ; ++i){
            while(!height_ind.empty() && height_ind.top().first>=heights[i])
                height_ind.pop();
            prev_min_ind[i] = (height_ind.empty()? -1 : height_ind.top().second);    
            height_ind.push({heights[i],i});
        }
        while(!height_ind.empty())
            height_ind.pop();
        for(int i=heights_count-1 ; i>=0 ; --i){
            while(!height_ind.empty() && height_ind.top().first>=heights[i])
                height_ind.pop();
            next_min_ind[i] = (height_ind.empty()? heights_count : height_ind.top().second);    
            height_ind.push({heights[i],i});
        }
        for(int i=0 ; i<heights.size() ; ++i){
            int current_rectangle = heights[i] * (next_min_ind[i] - prev_min_ind[i] - 1);
            max_rectangle = max(max_rectangle, current_rectangle);
        }
        return max_rectangle;
    }
};
