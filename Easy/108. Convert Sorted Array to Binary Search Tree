/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* sortedArrayToBST(int l, int r, vector<int> &nums){
        if(l>r)
            return nullptr;
        if(l==r)
            return new TreeNode(nums[l]);
        int mid = l + (r-l) / 2;
        TreeNode* leftBST = sortedArrayToBST(l, mid-1, nums);
        TreeNode* rightBST = sortedArrayToBST(mid+1, r, nums);
        return new TreeNode(nums[mid], leftBST, rightBST);        
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return sortedArrayToBST(0, nums.size()-1, nums);
    }
};
